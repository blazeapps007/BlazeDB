
import VirtualOperationItem from './VirtualOperationItem';

interface VirtualOperation {
  op: [string, any];
  timestamp: string;
  trx_id: string;
  block: number;
  trx_in_block: number;
  op_in_trx: number;
  virtual_op: number;
}

interface VirtualOperationsListProps {
  virtualOps: VirtualOperation[];
  getOperationIcon: (type: string) => React.ComponentType<{ className?: string }>;
  getOperationColor: (type: string) => string;
  formatTimestamp: (timestamp: string) => string;
}

const VirtualOperationsList = ({ virtualOps, getOperationColor, formatTimestamp }: VirtualOperationsListProps) => {
  if (virtualOps.length === 0) {
    return (
      <div className="text-center py-12">
        <div className="w-16 h-16 bg-gradient-to-br from-purple-500/20 to-pink-500/20 rounded-full flex items-center justify-center mx-auto mb-4">
          <span className="text-2xl">âš¡</span>
        </div>
        <p className="text-muted-foreground text-lg">No virtual operations in this block</p>
        <p className="text-muted-foreground/70 text-sm mt-1">Virtual operations are automatically generated by the blockchain</p>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <h3 className="text-xl font-bold text-foreground">Virtual Operations</h3>
        <div className="px-3 py-1 bg-purple-500/20 text-purple-500 rounded-full text-sm font-medium">
          {virtualOps.length} Virtual Operation{virtualOps.length !== 1 ? 's' : ''}
        </div>
      </div>
      
      <div className="space-y-4">
        {virtualOps.map((virtualOp, index) => (
          <VirtualOperationItem
            key={`${virtualOp.trx_id}-${virtualOp.virtual_op}`}
            virtualOp={virtualOp}
            index={index}
            getOperationColor={getOperationColor}
            formatTimestamp={formatTimestamp}
          />
        ))}
      </div>
    </div>
  );
};

export default VirtualOperationsList;
